/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RPSPlayerContract,
  RPSPlayerContractInterface,
} from "../RPSPlayerContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeCommitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "rps",
        type: "address",
      },
    ],
    name: "provideRPSContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600481526020017f6e6f6e6500000000000000000000000000000000000000000000000000000000815250600090816200004a919062000357565b5060405180602001604052806000815250600190816200006b919062000357565b506000600260006101000a81548160ff0219169083151502179055506000600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000d657600080fd5b506200043e565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200015f57607f821691505b60208210810362000175576200017462000117565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001df7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a0565b620001eb8683620001a0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000238620002326200022c8462000203565b6200020d565b62000203565b9050919050565b6000819050919050565b620002548362000217565b6200026c62000263826200023f565b848454620001ad565b825550505050565b600090565b6200028362000274565b6200029081848462000249565b505050565b5b81811015620002b857620002ac60008262000279565b60018101905062000296565b5050565b601f8211156200030757620002d1816200017b565b620002dc8462000190565b81016020851015620002ec578190505b62000304620002fb8562000190565b83018262000295565b50505b505050565b600082821c905092915050565b60006200032c600019846008026200030c565b1980831691505092915050565b600062000347838362000319565b9150826002028217905092915050565b6200036282620000dd565b67ffffffffffffffff8111156200037e576200037d620000e8565b5b6200038a825462000146565b62000397828285620002bc565b600060209050601f831160018114620003cf5760008415620003ba578287015190505b620003c6858262000339565b86555062000436565b601f198416620003df866200017b565b60005b828110156200040957848901518255600182019150602085019450602081019050620003e2565b8683101562000429578489015162000425601f89168262000319565b8355505b6001600288020188555050505b505050505050565b6110ca806200044e6000396000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c80624c6ad2146100505780632a79c6111461005a578063a475b5dd14610078578063a5e832bf14610082575b600080fd5b61005861009e565b005b6100626102d5565b60405161006f9190610884565b60405180910390f35b6100806102df565b005b61009c60048036038101906100979190610902565b610470565b005b600073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361012f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610126906109b2565b60405180910390fd5b610137610504565b610154612710610145610617565b61014f9190610a0b565b61064a565b600190816101629190610c82565b5060006001604051602001610178929190610de2565b60405160208183030381529060405280519060200120600381905550600080600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660006003546040516024016101e59190610884565b6040516020818303038152906040527fe05b10c0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161026f9190610e77565b60006040518083038185875af1925050503d80600081146102ac576040519150601f19603f3d011682016040523d82523d6000602084013e6102b1565b606091505b50915091506001600260006101000a81548160ff0219169083151502179055505050565b6000600354905090565b600260009054906101000a900460ff1661032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590610eda565b60405180910390fd5b600080600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000806001604051602401610380929190610f7e565b6040516020818303038152906040527f5441effc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161040a9190610e77565b60006040518083038185875af1925050503d8060008114610447576040519150601f19603f3d011682016040523d82523d6000602084013e61044c565b606091505b50915091506000600260006101000a81548160ff0219169083151502179055505050565b600260009054906101000a900460ff16156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790611027565b60405180910390fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006003610510610617565b61051a9190610a0b565b03610569576040518060400160405280600481526020017f726f636b00000000000000000000000000000000000000000000000000000000815250600090816105639190610c82565b50610615565b60016003610575610617565b61057f9190610a0b565b036105ce576040518060400160405280600581526020017f7061706572000000000000000000000000000000000000000000000000000000815250600090816105c89190610c82565b50610614565b6040518060400160405280600881526020017f73636973736f7273000000000000000000000000000000000000000000000000815250600090816106129190610c82565b505b5b565b6000444260405160200161062c929190611068565b6040516020818303038152906040528051906020012060001c905090565b60606000600161065984610718565b01905060008167ffffffffffffffff81111561067857610677610a47565b5b6040519080825280601f01601f1916602001820160405280156106aa5781602001600182028036833780820191505090505b509050600082602001820190505b60011561070d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610701576107006109dc565b5b049450600085036106b8575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610776577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161076c5761076b6109dc565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106107b3576d04ee2d6d415b85acef810000000083816107a9576107a86109dc565b5b0492506020810190505b662386f26fc1000083106107e257662386f26fc1000083816107d8576107d76109dc565b5b0492506010810190505b6305f5e100831061080b576305f5e1008381610801576108006109dc565b5b0492506008810190505b6127108310610830576127108381610826576108256109dc565b5b0492506004810190505b606483106108535760648381610849576108486109dc565b5b0492506002810190505b600a8310610862576001810190505b80915050919050565b6000819050919050565b61087e8161086b565b82525050565b60006020820190506108996000830184610875565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108cf826108a4565b9050919050565b6108df816108c4565b81146108ea57600080fd5b50565b6000813590506108fc816108d6565b92915050565b6000602082840312156109185761091761089f565b5b6000610926848285016108ed565b91505092915050565b600082825260208201905092915050565b7f52505320636f6e74726163742773206164726573732069736e2774207370656360008201527f69666965642e0000000000000000000000000000000000000000000000000000602082015250565b600061099c60268361092f565b91506109a782610940565b604082019050919050565b600060208201905081810360008301526109cb8161098f565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a16826109d2565b9150610a21836109d2565b925082610a3157610a306109dc565b5b828206905092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610abd57607f821691505b602082108103610ad057610acf610a76565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610b387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610afb565b610b428683610afb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b7f610b7a610b75846109d2565b610b5a565b6109d2565b9050919050565b6000819050919050565b610b9983610b64565b610bad610ba582610b86565b848454610b08565b825550505050565b600090565b610bc2610bb5565b610bcd818484610b90565b505050565b5b81811015610bf157610be6600082610bba565b600181019050610bd3565b5050565b601f821115610c3657610c0781610ad6565b610c1084610aeb565b81016020851015610c1f578190505b610c33610c2b85610aeb565b830182610bd2565b50505b505050565b600082821c905092915050565b6000610c5960001984600802610c3b565b1980831691505092915050565b6000610c728383610c48565b9150826002028217905092915050565b610c8b82610a3c565b67ffffffffffffffff811115610ca457610ca3610a47565b5b610cae8254610aa5565b610cb9828285610bf5565b600060209050601f831160018114610cec5760008415610cda578287015190505b610ce48582610c66565b865550610d4c565b601f198416610cfa86610ad6565b60005b82811015610d2257848901518255600182019150602085019450602081019050610cfd565b86831015610d3f5784890151610d3b601f891682610c48565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154610d6c81610aa5565b610d768186610d54565b94506001821660008114610d915760018114610da657610dd9565b60ff1983168652811515820286019350610dd9565b610daf85610ad6565b60005b83811015610dd157815481890152600182019150602081019050610db2565b838801955050505b50505092915050565b6000610dee8285610d5f565b9150610dfa8284610d5f565b91508190509392505050565b600081519050919050565b600081905092915050565b60005b83811015610e3a578082015181840152602081019050610e1f565b60008484015250505050565b6000610e5182610e06565b610e5b8185610e11565b9350610e6b818560208601610e1c565b80840191505092915050565b6000610e838284610e46565b915081905092915050565b7f47616d6520686173206e6f742073746172746564207965742e00000000000000600082015250565b6000610ec460198361092f565b9150610ecf82610e8e565b602082019050919050565b60006020820190508181036000830152610ef381610eb7565b9050919050565b60008154610f0781610aa5565b610f11818661092f565b94506001821660008114610f2c5760018114610f4257610f75565b60ff198316865281151560200286019350610f75565b610f4b85610ad6565b60005b83811015610f6d57815481890152600182019150602081019050610f4e565b808801955050505b50505092915050565b60006040820190508181036000830152610f988185610efa565b90508181036020830152610fac8184610efa565b90509392505050565b7f5468652052505320636f6e7472616374277320616464726573732063616e277460008201527f206265206368616e67656420647572696e67207468652067616d652e00000000602082015250565b6000611011603c8361092f565b915061101c82610fb5565b604082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b6000819050919050565b61106261105d826109d2565b611047565b82525050565b60006110748285611051565b6020820191506110848284611051565b602082019150819050939250505056fea264697066735822122017358c51af0a546ca51d047cca3f045c70c672c52ab48d801c411ee80a8a3dfa64736f6c63430008110033";

type RPSPlayerContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RPSPlayerContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RPSPlayerContract__factory extends ContractFactory {
  constructor(...args: RPSPlayerContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RPSPlayerContract> {
    return super.deploy(overrides || {}) as Promise<RPSPlayerContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RPSPlayerContract {
    return super.attach(address) as RPSPlayerContract;
  }
  override connect(signer: Signer): RPSPlayerContract__factory {
    return super.connect(signer) as RPSPlayerContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RPSPlayerContractInterface {
    return new utils.Interface(_abi) as RPSPlayerContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RPSPlayerContract {
    return new Contract(address, _abi, signerOrProvider) as RPSPlayerContract;
  }
}
